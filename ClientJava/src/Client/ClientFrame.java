/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author Farhan
 */
public class ClientFrame extends javax.swing.JFrame {

    /**
     * Creates new form ClientFrame
     */
    public ClientFrame() {
        initComponents();
        
        outBoxField.addActionListener((java.awt.event.ActionEvent e) -> {
            sendData();
        });
        
        

    }
    
    
    
    
    
    boolean connected=false; 
    String name=""; 
    
    
    
 
    
    
    
      
    String  sendData() {
        System.out.println("-------------------------------------------");
    String data=outBoxField.getText(); 
    if (data.isEmpty()) {
        // Exit if there is no data to send
        return ""; 
    }
    // Clear the text field
    outBoxField.setText(""); 
    try (
           //To connect the socket into 8080 port
            Socket socket = new Socket("localhost" ,8080)) { 
       // boxarea.append("Connected to Port 8080" + "\n")
        System.out.println("Connected To Server");
        
        connectionbutton.setEnabled(false);
        // Sockets Disconnects after 100 seconds
        socket.setSoTimeout(100000);
        //go get the Data
        OutputStream out = socket.getOutputStream();
        // Send the data as bytes
        out.write(data.getBytes()); 
        // Ensure all data is sent
        out.flush(); 
        //to sleep the software for 3 milliseconds
        Thread.sleep(300);
        InputStream fin=socket.getInputStream(); 
        byte[] b=new byte[fin.available()]; 
        fin.read(b); 
        String response=new String(b);
        
        boxarea.append("Client : " + data + "\n");
        boxarea.append("Server : " + response + "\n");
        
        
        
    } catch (Exception e) {
        
        // Log any exceptions
        System.err.println("Error sending data: " + e.getMessage());
        boxarea.append("Server is not Responding" + "\n");
    }
   
   return ""; 
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IPfield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        portfield = new javax.swing.JTextField();
        outBoxField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        boxarea = new javax.swing.JTextArea();
        snedButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        connectionbutton = new javax.swing.JButton();

        jLabel2.setText("IP :");

        jLabel3.setText("Port");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(outBoxField);
        outBoxField.setBounds(10, 250, 209, 22);

        boxarea.setColumns(20);
        boxarea.setRows(5);
        boxarea.setFocusable(false);
        jScrollPane1.setViewportView(boxarea);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 37, 287, 206);

        snedButton.setText("Send");
        snedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snedButtonActionPerformed(evt);
            }
        });
        getContentPane().add(snedButton);
        snedButton.setBounds(225, 249, 72, 23);

        jLabel1.setText("CLIENT");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 11, 96, 16);

        connectionbutton.setText("Connect");
        connectionbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectionbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(connectionbutton);
        connectionbutton.setBounds(195, 10, 100, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void snedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snedButtonActionPerformed
        // TODO add your handling code here:
        sendData(); 
    }//GEN-LAST:event_snedButtonActionPerformed

    private void connectionbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectionbuttonActionPerformed
        // TODO add your handling code here:
        boxarea.append("Client is Connected to Server port 8080\n");
        connectionbutton.setEnabled(false);
        
    }//GEN-LAST:event_connectionbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IPfield;
    private javax.swing.JTextArea boxarea;
    private javax.swing.JButton connectionbutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField outBoxField;
    private javax.swing.JTextField portfield;
    private javax.swing.JButton snedButton;
    // End of variables declaration//GEN-END:variables
}
